//
// TeamDiscussion.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** A team discussion is a persistent record of a free-form conversation within a team. */
public struct TeamDiscussion: Codable {

    public var author: SimpleUser?
    /** The main text of the discussion. */
    public var body: String
    public var bodyHtml: String
    /** The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server. */
    public var bodyVersion: String
    public var commentsCount: Int
    public var commentsUrl: String
    public var createdAt: Date
    public var lastEditedAt: Date?
    public var htmlUrl: String
    public var nodeId: String
    /** The unique sequence number of a team discussion. */
    public var number: Int
    /** Whether or not this discussion should be pinned for easy retrieval. */
    public var pinned: Bool
    /** Whether or not this discussion should be restricted to team members and organization administrators. */
    public var _private: Bool
    public var teamUrl: String
    /** The title of the discussion. */
    public var title: String
    public var updatedAt: Date
    public var url: String
    public var reactions: ReactionRollup?

    public init(author: SimpleUser?, body: String, bodyHtml: String, bodyVersion: String, commentsCount: Int, commentsUrl: String, createdAt: Date, lastEditedAt: Date?, htmlUrl: String, nodeId: String, number: Int, pinned: Bool, _private: Bool, teamUrl: String, title: String, updatedAt: Date, url: String, reactions: ReactionRollup? = nil) {
        self.author = author
        self.body = body
        self.bodyHtml = bodyHtml
        self.bodyVersion = bodyVersion
        self.commentsCount = commentsCount
        self.commentsUrl = commentsUrl
        self.createdAt = createdAt
        self.lastEditedAt = lastEditedAt
        self.htmlUrl = htmlUrl
        self.nodeId = nodeId
        self.number = number
        self.pinned = pinned
        self._private = _private
        self.teamUrl = teamUrl
        self.title = title
        self.updatedAt = updatedAt
        self.url = url
        self.reactions = reactions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case author
        case body
        case bodyHtml = "body_html"
        case bodyVersion = "body_version"
        case commentsCount = "comments_count"
        case commentsUrl = "comments_url"
        case createdAt = "created_at"
        case lastEditedAt = "last_edited_at"
        case htmlUrl = "html_url"
        case nodeId = "node_id"
        case number
        case pinned
        case _private = "private"
        case teamUrl = "team_url"
        case title
        case updatedAt = "updated_at"
        case url
        case reactions
    }

}

