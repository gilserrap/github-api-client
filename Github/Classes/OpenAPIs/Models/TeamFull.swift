//
// TeamFull.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Groups of organization members that gives permissions on specified repositories. */
public struct TeamFull: Codable {

    public enum Privacy: String, Codable, CaseIterable {
        case closed = "closed"
        case secret = "secret"
    }
    /** Unique identifier of the team */
    public var id: Int
    public var nodeId: String
    /** URL for the team */
    public var url: String
    public var htmlUrl: String
    /** Name of the team */
    public var name: String
    public var slug: String
    public var description: String?
    /** The level of privacy this team should have */
    public var privacy: Privacy?
    /** Permission that the team will have for its repositories */
    public var permission: String
    public var membersUrl: String
    public var repositoriesUrl: String
    public var parent: TeamSimple?
    public var membersCount: Int
    public var reposCount: Int
    public var createdAt: Date
    public var updatedAt: Date
    public var organization: OrganizationFull
    /** Distinguished Name (DN) that team maps to within LDAP environment */
    public var ldapDn: String?

    public init(id: Int, nodeId: String, url: String, htmlUrl: String, name: String, slug: String, description: String?, privacy: Privacy? = nil, permission: String, membersUrl: String, repositoriesUrl: String, parent: TeamSimple? = nil, membersCount: Int, reposCount: Int, createdAt: Date, updatedAt: Date, organization: OrganizationFull, ldapDn: String? = nil) {
        self.id = id
        self.nodeId = nodeId
        self.url = url
        self.htmlUrl = htmlUrl
        self.name = name
        self.slug = slug
        self.description = description
        self.privacy = privacy
        self.permission = permission
        self.membersUrl = membersUrl
        self.repositoriesUrl = repositoriesUrl
        self.parent = parent
        self.membersCount = membersCount
        self.reposCount = reposCount
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.organization = organization
        self.ldapDn = ldapDn
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case nodeId = "node_id"
        case url
        case htmlUrl = "html_url"
        case name
        case slug
        case description
        case privacy
        case permission
        case membersUrl = "members_url"
        case repositoriesUrl = "repositories_url"
        case parent
        case membersCount = "members_count"
        case reposCount = "repos_count"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case organization
        case ldapDn = "ldap_dn"
    }

}

