//
// Deployment.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** A request for a specific ref(branch,sha,tag) to be deployed */
public struct Deployment: Codable {

    public var url: String
    /** Unique identifier of the deployment */
    public var id: Int
    public var nodeId: String
    public var sha: String
    /** The ref to deploy. This can be a branch, tag, or sha. */
    public var ref: String
    /** Parameter to specify a task to execute */
    public var task: String
    public var payload: String
    public var originalEnvironment: String?
    /** Name for the target deployment environment. */
    public var environment: String
    public var description: String?
    public var creator: SimpleUser?
    public var createdAt: Date
    public var updatedAt: Date
    public var statusesUrl: String
    public var repositoryUrl: String
    /** Specifies if the given environment is will no longer exist at some point in the future. Default: false. */
    public var transientEnvironment: Bool?
    /** Specifies if the given environment is one that end-users directly interact with. Default: false. */
    public var productionEnvironment: Bool?
    public var performedViaGithubApp: Integration?

    public init(url: String, id: Int, nodeId: String, sha: String, ref: String, task: String, payload: String, originalEnvironment: String? = nil, environment: String, description: String?, creator: SimpleUser?, createdAt: Date, updatedAt: Date, statusesUrl: String, repositoryUrl: String, transientEnvironment: Bool? = nil, productionEnvironment: Bool? = nil, performedViaGithubApp: Integration? = nil) {
        self.url = url
        self.id = id
        self.nodeId = nodeId
        self.sha = sha
        self.ref = ref
        self.task = task
        self.payload = payload
        self.originalEnvironment = originalEnvironment
        self.environment = environment
        self.description = description
        self.creator = creator
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.statusesUrl = statusesUrl
        self.repositoryUrl = repositoryUrl
        self.transientEnvironment = transientEnvironment
        self.productionEnvironment = productionEnvironment
        self.performedViaGithubApp = performedViaGithubApp
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case url
        case id
        case nodeId = "node_id"
        case sha
        case ref
        case task
        case payload
        case originalEnvironment = "original_environment"
        case environment
        case description
        case creator
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case statusesUrl = "statuses_url"
        case repositoryUrl = "repository_url"
        case transientEnvironment = "transient_environment"
        case productionEnvironment = "production_environment"
        case performedViaGithubApp = "performed_via_github_app"
    }

}

