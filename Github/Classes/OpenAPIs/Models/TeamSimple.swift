//
// TeamSimple.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Groups of organization members that gives permissions on specified repositories. */
public struct TeamSimple: Codable {

    /** Unique identifier of the team */
    public var id: Int
    public var nodeId: String
    /** URL for the team */
    public var url: String
    public var membersUrl: String
    /** Name of the team */
    public var name: String
    /** Description of the team */
    public var description: String?
    /** Permission that the team will have for its repositories */
    public var permission: String
    /** The level of privacy this team should have */
    public var privacy: String?
    public var htmlUrl: String
    public var repositoriesUrl: String
    public var slug: String
    /** Distinguished Name (DN) that team maps to within LDAP environment */
    public var ldapDn: String?

    public init(id: Int, nodeId: String, url: String, membersUrl: String, name: String, description: String?, permission: String, privacy: String? = nil, htmlUrl: String, repositoriesUrl: String, slug: String, ldapDn: String? = nil) {
        self.id = id
        self.nodeId = nodeId
        self.url = url
        self.membersUrl = membersUrl
        self.name = name
        self.description = description
        self.permission = permission
        self.privacy = privacy
        self.htmlUrl = htmlUrl
        self.repositoriesUrl = repositoriesUrl
        self.slug = slug
        self.ldapDn = ldapDn
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case nodeId = "node_id"
        case url
        case membersUrl = "members_url"
        case name
        case description
        case permission
        case privacy
        case htmlUrl = "html_url"
        case repositoriesUrl = "repositories_url"
        case slug
        case ldapDn = "ldap_dn"
    }

}

