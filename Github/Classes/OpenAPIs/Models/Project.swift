//
// Project.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Projects are a way to organize columns and cards of work. */
public struct Project: Codable {

    public enum OrganizationPermission: String, Codable, CaseIterable {
        case read = "read"
        case write = "write"
        case admin = "admin"
        case _none = "none"
    }
    public var ownerUrl: String
    public var url: String
    public var htmlUrl: String
    public var columnsUrl: String
    public var id: Int
    public var nodeId: String
    /** Name of the project */
    public var name: String
    /** Body of the project */
    public var body: String?
    public var number: Int
    /** State of the project; either &#39;open&#39; or &#39;closed&#39; */
    public var state: String
    public var creator: SimpleUser?
    public var createdAt: Date
    public var updatedAt: Date
    /** The baseline permission that all organization members have on this project. Only present if owner is an organization. */
    public var organizationPermission: OrganizationPermission?
    /** Whether or not this project can be seen by everyone. Only present if owner is an organization. */
    public var _private: Bool?

    public init(ownerUrl: String, url: String, htmlUrl: String, columnsUrl: String, id: Int, nodeId: String, name: String, body: String?, number: Int, state: String, creator: SimpleUser?, createdAt: Date, updatedAt: Date, organizationPermission: OrganizationPermission? = nil, _private: Bool? = nil) {
        self.ownerUrl = ownerUrl
        self.url = url
        self.htmlUrl = htmlUrl
        self.columnsUrl = columnsUrl
        self.id = id
        self.nodeId = nodeId
        self.name = name
        self.body = body
        self.number = number
        self.state = state
        self.creator = creator
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.organizationPermission = organizationPermission
        self._private = _private
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case ownerUrl = "owner_url"
        case url
        case htmlUrl = "html_url"
        case columnsUrl = "columns_url"
        case id
        case nodeId = "node_id"
        case name
        case body
        case number
        case state
        case creator
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case organizationPermission = "organization_permission"
        case _private = "private"
    }

}

