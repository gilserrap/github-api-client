//
// BaseGist.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Base Gist */
public struct BaseGist: Codable {

    public var url: String
    public var forksUrl: String
    public var commitsUrl: String
    public var id: String
    public var nodeId: String
    public var gitPullUrl: String
    public var gitPushUrl: String
    public var htmlUrl: String
    public var files: [String:BaseGistFiles]
    public var _public: Bool
    public var createdAt: Date
    public var updatedAt: Date
    public var description: String?
    public var comments: Int
    public var user: SimpleUser?
    public var commentsUrl: String
    public var owner: SimpleUser?
    public var truncated: Bool?
    public var forks: [Any]?
    public var history: [Any]?

    public init(url: String, forksUrl: String, commitsUrl: String, id: String, nodeId: String, gitPullUrl: String, gitPushUrl: String, htmlUrl: String, files: [String:BaseGistFiles], _public: Bool, createdAt: Date, updatedAt: Date, description: String?, comments: Int, user: SimpleUser?, commentsUrl: String, owner: SimpleUser? = nil, truncated: Bool? = nil, forks: [Any]? = nil, history: [Any]? = nil) {
        self.url = url
        self.forksUrl = forksUrl
        self.commitsUrl = commitsUrl
        self.id = id
        self.nodeId = nodeId
        self.gitPullUrl = gitPullUrl
        self.gitPushUrl = gitPushUrl
        self.htmlUrl = htmlUrl
        self.files = files
        self._public = _public
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.description = description
        self.comments = comments
        self.user = user
        self.commentsUrl = commentsUrl
        self.owner = owner
        self.truncated = truncated
        self.forks = forks
        self.history = history
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case url
        case forksUrl = "forks_url"
        case commitsUrl = "commits_url"
        case id
        case nodeId = "node_id"
        case gitPullUrl = "git_pull_url"
        case gitPushUrl = "git_push_url"
        case htmlUrl = "html_url"
        case files
        case _public = "public"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case description
        case comments
        case user
        case commentsUrl = "comments_url"
        case owner
        case truncated
        case forks
        case history
    }

}

