//
// EnterpriseSettingsEnterpriseLdap.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct EnterpriseSettingsEnterpriseLdap: Codable {

    public var host: String?
    public var port: Int?
    public var base: [Any]?
    public var uid: String?
    public var bindDn: String?
    public var password: String?
    public var method: String?
    public var searchStrategy: String?
    public var userGroups: [Any]?
    public var adminGroup: String?
    public var virtualAttributeEnabled: Bool?
    public var recursiveGroupSearch: Bool?
    public var posixSupport: Bool?
    public var userSyncEmails: Bool?
    public var userSyncKeys: Bool?
    public var userSyncInterval: Int?
    public var teamSyncInterval: Int?
    public var syncEnabled: Bool?
    public var reconciliation: EnterpriseSettingsEnterpriseLdapReconciliation?
    public var profile: EnterpriseSettingsEnterpriseLdapProfile?

    public init(host: String? = nil, port: Int? = nil, base: [Any]? = nil, uid: String? = nil, bindDn: String? = nil, password: String? = nil, method: String? = nil, searchStrategy: String? = nil, userGroups: [Any]? = nil, adminGroup: String? = nil, virtualAttributeEnabled: Bool? = nil, recursiveGroupSearch: Bool? = nil, posixSupport: Bool? = nil, userSyncEmails: Bool? = nil, userSyncKeys: Bool? = nil, userSyncInterval: Int? = nil, teamSyncInterval: Int? = nil, syncEnabled: Bool? = nil, reconciliation: EnterpriseSettingsEnterpriseLdapReconciliation? = nil, profile: EnterpriseSettingsEnterpriseLdapProfile? = nil) {
        self.host = host
        self.port = port
        self.base = base
        self.uid = uid
        self.bindDn = bindDn
        self.password = password
        self.method = method
        self.searchStrategy = searchStrategy
        self.userGroups = userGroups
        self.adminGroup = adminGroup
        self.virtualAttributeEnabled = virtualAttributeEnabled
        self.recursiveGroupSearch = recursiveGroupSearch
        self.posixSupport = posixSupport
        self.userSyncEmails = userSyncEmails
        self.userSyncKeys = userSyncKeys
        self.userSyncInterval = userSyncInterval
        self.teamSyncInterval = teamSyncInterval
        self.syncEnabled = syncEnabled
        self.reconciliation = reconciliation
        self.profile = profile
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case host
        case port
        case base
        case uid
        case bindDn = "bind_dn"
        case password
        case method
        case searchStrategy = "search_strategy"
        case userGroups = "user_groups"
        case adminGroup = "admin_group"
        case virtualAttributeEnabled = "virtual_attribute_enabled"
        case recursiveGroupSearch = "recursive_group_search"
        case posixSupport = "posix_support"
        case userSyncEmails = "user_sync_emails"
        case userSyncKeys = "user_sync_keys"
        case userSyncInterval = "user_sync_interval"
        case teamSyncInterval = "team_sync_interval"
        case syncEnabled = "sync_enabled"
        case reconciliation
        case profile
    }

}

