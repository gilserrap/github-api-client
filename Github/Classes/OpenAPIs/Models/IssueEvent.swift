//
// IssueEvent.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Issue Event */
public struct IssueEvent: Codable {

    public var id: Int
    public var nodeId: String
    public var url: String
    public var actor: SimpleUser?
    public var event: String
    public var commitId: String?
    public var commitUrl: String?
    public var createdAt: Date
    public var issue: IssueSimple?
    public var label: IssueEventLabel?
    public var assignee: SimpleUser?
    public var assigner: SimpleUser?
    public var reviewRequester: SimpleUser?
    public var requestedReviewer: SimpleUser?
    public var requestedTeam: Team?
    public var dismissedReview: IssueEventDismissedReview?
    public var milestone: IssueEventMilestone?
    public var projectCard: IssueEventProjectCard?
    public var rename: IssueEventRename?
    public var authorAssociation: AuthorAssociation?
    public var lockReason: String?

    public init(id: Int, nodeId: String, url: String, actor: SimpleUser?, event: String, commitId: String?, commitUrl: String?, createdAt: Date, issue: IssueSimple? = nil, label: IssueEventLabel? = nil, assignee: SimpleUser? = nil, assigner: SimpleUser? = nil, reviewRequester: SimpleUser? = nil, requestedReviewer: SimpleUser? = nil, requestedTeam: Team? = nil, dismissedReview: IssueEventDismissedReview? = nil, milestone: IssueEventMilestone? = nil, projectCard: IssueEventProjectCard? = nil, rename: IssueEventRename? = nil, authorAssociation: AuthorAssociation? = nil, lockReason: String? = nil) {
        self.id = id
        self.nodeId = nodeId
        self.url = url
        self.actor = actor
        self.event = event
        self.commitId = commitId
        self.commitUrl = commitUrl
        self.createdAt = createdAt
        self.issue = issue
        self.label = label
        self.assignee = assignee
        self.assigner = assigner
        self.reviewRequester = reviewRequester
        self.requestedReviewer = requestedReviewer
        self.requestedTeam = requestedTeam
        self.dismissedReview = dismissedReview
        self.milestone = milestone
        self.projectCard = projectCard
        self.rename = rename
        self.authorAssociation = authorAssociation
        self.lockReason = lockReason
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case nodeId = "node_id"
        case url
        case actor
        case event
        case commitId = "commit_id"
        case commitUrl = "commit_url"
        case createdAt = "created_at"
        case issue
        case label
        case assignee
        case assigner
        case reviewRequester = "review_requester"
        case requestedReviewer = "requested_reviewer"
        case requestedTeam = "requested_team"
        case dismissedReview = "dismissed_review"
        case milestone
        case projectCard = "project_card"
        case rename
        case authorAssociation = "author_association"
        case lockReason = "lock_reason"
    }

}

