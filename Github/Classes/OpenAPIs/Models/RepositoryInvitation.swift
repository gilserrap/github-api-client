//
// RepositoryInvitation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Repository invitations let you manage who you collaborate with. */
public struct RepositoryInvitation: Codable {

    public enum Permissions: String, Codable, CaseIterable {
        case read = "read"
        case write = "write"
        case admin = "admin"
    }
    /** Unique identifier of the repository invitation. */
    public var id: Int
    public var repository: MinimalRepository
    public var invitee: SimpleUser?
    public var inviter: SimpleUser?
    /** The permission associated with the invitation. */
    public var permissions: Permissions
    public var createdAt: Date
    /** Whether or not the invitation has expired */
    public var expired: Bool?
    /** URL for the repository invitation */
    public var url: String
    public var htmlUrl: String
    public var nodeId: String

    public init(id: Int, repository: MinimalRepository, invitee: SimpleUser?, inviter: SimpleUser?, permissions: Permissions, createdAt: Date, expired: Bool? = nil, url: String, htmlUrl: String, nodeId: String) {
        self.id = id
        self.repository = repository
        self.invitee = invitee
        self.inviter = inviter
        self.permissions = permissions
        self.createdAt = createdAt
        self.expired = expired
        self.url = url
        self.htmlUrl = htmlUrl
        self.nodeId = nodeId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case repository
        case invitee
        case inviter
        case permissions
        case createdAt = "created_at"
        case expired
        case url
        case htmlUrl = "html_url"
        case nodeId = "node_id"
    }

}

