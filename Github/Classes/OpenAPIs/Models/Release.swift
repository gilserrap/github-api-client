//
// Release.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** A release. */
public struct Release: Codable {

    public var url: String
    public var htmlUrl: String
    public var assetsUrl: String
    public var uploadUrl: String
    public var tarballUrl: String?
    public var zipballUrl: String?
    public var id: Int
    public var nodeId: String
    /** The name of the tag. */
    public var tagName: String
    /** Specifies the commitish value that determines where the Git tag is created from. */
    public var targetCommitish: String
    public var name: String?
    public var body: String?
    /** true to create a draft (unpublished) release, false to create a published one. */
    public var draft: Bool
    /** Whether to identify the release as a prerelease or a full release. */
    public var prerelease: Bool
    public var createdAt: Date
    public var publishedAt: Date?
    public var author: SimpleUser?
    public var assets: [ReleaseAsset]
    public var bodyHtml: String?
    public var bodyText: String?

    public init(url: String, htmlUrl: String, assetsUrl: String, uploadUrl: String, tarballUrl: String?, zipballUrl: String?, id: Int, nodeId: String, tagName: String, targetCommitish: String, name: String?, body: String? = nil, draft: Bool, prerelease: Bool, createdAt: Date, publishedAt: Date?, author: SimpleUser?, assets: [ReleaseAsset], bodyHtml: String? = nil, bodyText: String? = nil) {
        self.url = url
        self.htmlUrl = htmlUrl
        self.assetsUrl = assetsUrl
        self.uploadUrl = uploadUrl
        self.tarballUrl = tarballUrl
        self.zipballUrl = zipballUrl
        self.id = id
        self.nodeId = nodeId
        self.tagName = tagName
        self.targetCommitish = targetCommitish
        self.name = name
        self.body = body
        self.draft = draft
        self.prerelease = prerelease
        self.createdAt = createdAt
        self.publishedAt = publishedAt
        self.author = author
        self.assets = assets
        self.bodyHtml = bodyHtml
        self.bodyText = bodyText
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case url
        case htmlUrl = "html_url"
        case assetsUrl = "assets_url"
        case uploadUrl = "upload_url"
        case tarballUrl = "tarball_url"
        case zipballUrl = "zipball_url"
        case id
        case nodeId = "node_id"
        case tagName = "tag_name"
        case targetCommitish = "target_commitish"
        case name
        case body
        case draft
        case prerelease
        case createdAt = "created_at"
        case publishedAt = "published_at"
        case author
        case assets
        case bodyHtml = "body_html"
        case bodyText = "body_text"
    }

}

