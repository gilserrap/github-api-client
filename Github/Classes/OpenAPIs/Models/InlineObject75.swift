//
// InlineObject75.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct InlineObject75: Codable {

    public var requiredStatusChecks: ReposOwnerRepoBranchesBranchProtectionRequiredStatusChecks?
    /** Enforce all configured restrictions for administrators. Set to &#x60;true&#x60; to enforce required status checks for repository administrators. Set to &#x60;null&#x60; to disable. */
    public var enforceAdmins: Bool?
    public var requiredPullRequestReviews: ReposOwnerRepoBranchesBranchProtectionRequiredPullRequestReviews?
    public var restrictions: ReposOwnerRepoBranchesBranchProtectionRestrictions?
    /** Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to &#x60;true&#x60; to enforce a linear commit history. Set to &#x60;false&#x60; to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: &#x60;false&#x60;. For more information, see \&quot;[Requiring a linear commit history](https://help.github.com/github/administering-a-repository/requiring-a-linear-commit-history)\&quot; in the GitHub Help documentation. */
    public var requiredLinearHistory: Bool?
    /** Permits force pushes to the protected branch by anyone with write access to the repository. Set to &#x60;true&#x60; to allow force pushes. Set to &#x60;false&#x60; or &#x60;null&#x60; to block force pushes. Default: &#x60;false&#x60;. For more information, see \&quot;[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\&quot; in the GitHub Help documentation.\&quot; */
    public var allowForcePushes: Bool?
    /** Allows deletion of the protected branch by anyone with write access to the repository. Set to &#x60;false&#x60; to prevent deletion of the protected branch. Default: &#x60;false&#x60;. For more information, see \&quot;[Enabling force pushes to a protected branch](https://help.github.com/en/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)\&quot; in the GitHub Help documentation. */
    public var allowDeletions: Bool?

    public init(requiredStatusChecks: ReposOwnerRepoBranchesBranchProtectionRequiredStatusChecks?, enforceAdmins: Bool?, requiredPullRequestReviews: ReposOwnerRepoBranchesBranchProtectionRequiredPullRequestReviews?, restrictions: ReposOwnerRepoBranchesBranchProtectionRestrictions?, requiredLinearHistory: Bool? = nil, allowForcePushes: Bool? = nil, allowDeletions: Bool? = nil) {
        self.requiredStatusChecks = requiredStatusChecks
        self.enforceAdmins = enforceAdmins
        self.requiredPullRequestReviews = requiredPullRequestReviews
        self.restrictions = restrictions
        self.requiredLinearHistory = requiredLinearHistory
        self.allowForcePushes = allowForcePushes
        self.allowDeletions = allowDeletions
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case requiredStatusChecks = "required_status_checks"
        case enforceAdmins = "enforce_admins"
        case requiredPullRequestReviews = "required_pull_request_reviews"
        case restrictions
        case requiredLinearHistory = "required_linear_history"
        case allowForcePushes = "allow_force_pushes"
        case allowDeletions = "allow_deletions"
    }

}

