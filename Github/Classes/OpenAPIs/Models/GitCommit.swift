//
// GitCommit.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Low-level Git commit operations within a repository */
public struct GitCommit: Codable {

    /** SHA for the commit */
    public var sha: String
    public var nodeId: String
    public var url: String
    public var author: GitCommitAuthor
    public var committer: GitCommitAuthor
    /** Message describing the purpose of the commit */
    public var message: String
    public var tree: GitCommitTree
    public var parents: [GitCommitParents]
    public var verification: GitCommitVerification
    public var htmlUrl: String

    public init(sha: String, nodeId: String, url: String, author: GitCommitAuthor, committer: GitCommitAuthor, message: String, tree: GitCommitTree, parents: [GitCommitParents], verification: GitCommitVerification, htmlUrl: String) {
        self.sha = sha
        self.nodeId = nodeId
        self.url = url
        self.author = author
        self.committer = committer
        self.message = message
        self.tree = tree
        self.parents = parents
        self.verification = verification
        self.htmlUrl = htmlUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case sha
        case nodeId = "node_id"
        case url
        case author
        case committer
        case message
        case tree
        case parents
        case verification
        case htmlUrl = "html_url"
    }

}

