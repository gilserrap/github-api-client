//
// GpgKey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** A unique encryption key */
public struct GpgKey: Codable {

    public var id: Int
    public var primaryKeyId: Int?
    public var keyId: String
    public var publicKey: String
    public var emails: [GpgKeyEmails]
    public var subkeys: [GpgKeySubkeys]
    public var canSign: Bool
    public var canEncryptComms: Bool
    public var canEncryptStorage: Bool
    public var canCertify: Bool
    public var createdAt: Date
    public var expiresAt: Date?
    public var rawKey: String?

    public init(id: Int, primaryKeyId: Int?, keyId: String, publicKey: String, emails: [GpgKeyEmails], subkeys: [GpgKeySubkeys], canSign: Bool, canEncryptComms: Bool, canEncryptStorage: Bool, canCertify: Bool, createdAt: Date, expiresAt: Date?, rawKey: String?) {
        self.id = id
        self.primaryKeyId = primaryKeyId
        self.keyId = keyId
        self.publicKey = publicKey
        self.emails = emails
        self.subkeys = subkeys
        self.canSign = canSign
        self.canEncryptComms = canEncryptComms
        self.canEncryptStorage = canEncryptStorage
        self.canCertify = canCertify
        self.createdAt = createdAt
        self.expiresAt = expiresAt
        self.rawKey = rawKey
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case primaryKeyId = "primary_key_id"
        case keyId = "key_id"
        case publicKey = "public_key"
        case emails
        case subkeys
        case canSign = "can_sign"
        case canEncryptComms = "can_encrypt_comms"
        case canEncryptStorage = "can_encrypt_storage"
        case canCertify = "can_certify"
        case createdAt = "created_at"
        case expiresAt = "expires_at"
        case rawKey = "raw_key"
    }

}

